// Code generated by mockery v2.33.2. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	time "time"
)

// HomeUsecase is an autogenerated mock type for the HomeUsecase type
type HomeUsecase struct {
	mock.Mock
}

// RenderTemplate provides a mock function with given fields: c, statusCode, name, cacheDuration, data
func (_m *HomeUsecase) RenderTemplate(c context.Context, statusCode int, name string, cacheDuration time.Duration, data interface{}) {
	_m.Called(c, statusCode, name, cacheDuration, data)
}

// NewHomeUsecase creates a new instance of HomeUsecase. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewHomeUsecase(t interface {
	mock.TestingT
	Cleanup(func())
}) *HomeUsecase {
	mock := &HomeUsecase{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
